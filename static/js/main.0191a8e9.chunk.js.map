{"version":3,"sources":["fbase.js","components/Navigation.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","Navigation","userObj","className","to","icon","faTwitter","color","size","faUser","displayName","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","e","console","log","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","key","Profile","refreshUser","newDisplayName","setNewDisplayName","updateProfile","signOut","AppRouter","isLoggedin","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0191a8e9.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul className=\"navUl\">\r\n      <li>\r\n        <Link to=\"/\" className=\"mr_10px\">\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/profile\" className=\"navLink\">\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span className=\"mt_10px\">\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}Ïùò Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (e) => {\r\n    console.log(e.target.name);\r\n    const {\r\n      target: { name, value },\r\n    } = e;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        // create account\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        // log in\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"wrapper\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Log In\"}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (e) => {\r\n    const {\r\n      target: { name },\r\n    } = e;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        className=\"mb_30px\"\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setNewNweet(value);\r\n  };\r\n  console.log(nweetObj);\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n            <>\r\n              <form onSubmit={onSubmit} className=\"wrapper nweetEdit\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Edit your nweet\"\r\n                  value={newNweet}\r\n                  required\r\n                  autoFocus\r\n                  onChange={onChange}\r\n                  className=\"formInput\"\r\n                />\r\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n              </form>\r\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                Cancel\r\n              </span>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (e) => {\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment != \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    dbService.collection(\"nweets\").add(nweetObj);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (e) => {\r\n    const {\r\n      target: { files },\r\n    } = e;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        className=\"opa_0\"\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { dbService } from \"fbase\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n  useEffect(() => {\r\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n      const nweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(nweetArray);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"wrapper\">\r\n        <NweetFactory userObj={userObj} />\r\n        <div className=\"mt_30px\">\r\n          {nweets.map((nweet) => (\r\n            <Nweet\r\n              key={nweet.id}\r\n              nweetObj={nweet}\r\n              isOwner={nweet.creatorId === userObj.uid}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const [newDisplayName, setNewDisplayName] = useState(\r\n    userObj.displayName || \"\"\r\n  );\r\n  const onLogOutClick = () => authService.signOut();\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({ displayName: newDisplayName });\r\n      refreshUser();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"wrapper\">\r\n        <form onSubmit={onSubmit} className=\"profileForm\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Display name\"\r\n            value={newDisplayName}\r\n            onChange={onChange}\r\n            autoFocus\r\n            className=\"formInput\"\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Update profile\"\r\n            className=\"formBtn mt_10px\"\r\n          />\r\n        </form>\r\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n          Log Out\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\n\r\nimport Navigation from \"components/Navigation\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({ isLoggedin, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedin && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedin ? (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport { authService } from \"fbase\";\n\nimport AppRouter from \"components/Router\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          isLoggedin={Boolean(userObj)}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}