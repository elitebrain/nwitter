{"version":3,"sources":["fbase.js","components/Navigation.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","Navigation","userObj","className","to","icon","faTwitter","color","size","faUser","displayName","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","e","console","log","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","key","Profile","refreshUser","newDisplayName","setNewDisplayName","updateProfile","signOut","AppRouter","isLoggedin","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83e9275d.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul className=\"navUl\">\n      <li>\n        <Link to=\"/\" className=\"mr_10px\">\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link to=\"/profile\" className=\"navLink\">\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span className=\"mt_10px\">\n            {userObj.displayName\n              ? `${userObj.displayName}Ïùò Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(false);\n  const [error, setError] = useState(\"\");\n  const onChange = (e) => {\n    console.log(e.target.name);\n    const {\n      target: { name, value },\n    } = e;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        // create account\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        // log in\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"wrapper\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Log In\"}\n          className=\"authInput authSubmit\"\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n  const onSocialClick = async (e) => {\n    const {\n      target: { name },\n    } = e;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        className=\"mb_30px\"\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useState } from \"react\";\n\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNewNweet(value);\n  };\n  console.log(nweetObj);\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          {isOwner && (\n            <>\n              <form onSubmit={onSubmit} className=\"wrapper nweetEdit\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Edit your nweet\"\n                  value={newNweet}\n                  required\n                  autoFocus\n                  onChange={onChange}\n                  className=\"formInput\"\n                />\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n              </form>\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                Cancel\n              </span>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n          {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (e) => {\n    if (nweet === \"\") {\n      return;\n    }\n    e.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment != \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNweet(value);\n  };\n  const onFileChange = (e) => {\n    const {\n      target: { files },\n    } = e;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        className=\"opa_0\"\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import React, { useEffect, useState } from \"react\";\n\nimport { dbService } from \"fbase\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n  return (\n    <div className=\"container\">\n      <div className=\"wrapper\">\n        <NweetFactory userObj={userObj} />\n        <div className=\"mt_30px\">\n          {nweets.map((nweet) => (\n            <Nweet\n              key={nweet.id}\n              nweetObj={nweet}\n              isOwner={nweet.creatorId === userObj.uid}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const [newDisplayName, setNewDisplayName] = useState(\n    userObj.displayName || \"\"\n  );\n  const onLogOutClick = () => authService.signOut();\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({ displayName: newDisplayName });\n      refreshUser();\n    }\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"wrapper\">\n        <form onSubmit={onSubmit} className=\"profileForm\">\n          <input\n            type=\"text\"\n            placeholder=\"Display name\"\n            value={newDisplayName}\n            onChange={onChange}\n            autoFocus\n            className=\"formInput\"\n          />\n          <input\n            type=\"submit\"\n            value=\"Update profile\"\n            className=\"formBtn mt_10px\"\n          />\n        </form>\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n          Log Out\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nimport Navigation from \"components/Navigation\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({ isLoggedin, userObj, refreshUser }) => {\n  return (\n    <Router>\n      {isLoggedin && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedin ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n            <Redirect from=\"*\" to=\"/\" />\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n            <Redirect from=\"*\" to=\"/\" />\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport { authService } from \"fbase\";\n\nimport AppRouter from \"components/Router\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          isLoggedin={Boolean(userObj)}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}